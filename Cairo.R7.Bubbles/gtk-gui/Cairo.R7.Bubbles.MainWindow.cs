
// This file has been generated by the GUI designer. Do not modify.
namespace Cairo.R7.Bubbles
{
	public partial class MainWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action resetAction;
		private global::Gtk.VBox vbox1;
		private global::Gtk.Toolbar toolbar2;
		private global::Gtk.HBox hbox1;
		private global::Gtk.Label label1;
		private global::Gtk.HScale scaleSpeed;
		private global::Gtk.HSeparator hseparator1;
		private global::Gtk.DrawingArea drawingarea1;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Cairo.R7.Bubbles.MainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.resetAction = new global::Gtk.Action ("resetAction", null, null, "gtk-refresh");
			this.resetAction.IsImportant = true;
			this.resetAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Reset");
			w1.Add (this.resetAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "Cairo.R7.Bubbles.MainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Cairo.R7.Bubbles");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child Cairo.R7.Bubbles.MainWindow.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar2'><toolitem name='resetAction' action='resetAction'/></toolbar></ui>");
			this.toolbar2 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar2")));
			this.toolbar2.Name = "toolbar2";
			this.toolbar2.ShowArrow = false;
			this.vbox1.Add (this.toolbar2);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.toolbar2]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 1F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Speed:");
			this.hbox1.Add (this.label1);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.label1]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.scaleSpeed = new global::Gtk.HScale (null);
			this.scaleSpeed.CanFocus = true;
			this.scaleSpeed.Name = "scaleSpeed";
			this.scaleSpeed.Adjustment.Upper = 10;
			this.scaleSpeed.Adjustment.PageIncrement = 2;
			this.scaleSpeed.Adjustment.StepIncrement = 1;
			this.scaleSpeed.Adjustment.Value = 2;
			this.scaleSpeed.DrawValue = true;
			this.scaleSpeed.Digits = 0;
			this.scaleSpeed.ValuePos = ((global::Gtk.PositionType)(0));
			this.hbox1.Add (this.scaleSpeed);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.scaleSpeed]));
			w4.Position = 1;
			this.vbox1.Add (this.hbox1);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox1]));
			w5.Position = 1;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.vbox1.Add (this.hseparator1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hseparator1]));
			w6.Position = 2;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.drawingarea1 = new global::Gtk.DrawingArea ();
			this.drawingarea1.Name = "drawingarea1";
			this.vbox1.Add (this.drawingarea1);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.drawingarea1]));
			w7.Position = 3;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 476;
			this.DefaultHeight = 433;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.resetAction.Activated += new global::System.EventHandler (this.OnResetActionActivated);
			this.scaleSpeed.ValueChanged += new global::System.EventHandler (this.OnScaleSpeedValueChanged);
			this.drawingarea1.ExposeEvent += new global::Gtk.ExposeEventHandler (this.OnDrawingarea1ExposeEvent);
		}
	}
}
